@model ImmoWhatApp.Models.BienModels

@{
    ViewBag.Title = "AddNewBien";
}

<h2>AddNewBien</h2>









<div class="row" style="margin-top:10vh;">
    <div class="col-lg-10 offset-lg-1 mt-4">
        <form>
            <div class="jumbotron">
                <h4>adresse</h4>
                <div class="row">
                    <div class="col-lg-6">

                        <div class="form-group col-12">
                                <input id="searchTextField" type="text" class="form-control col-12" placeholder="adresse" aria-label="Recipient's username" aria-describedby="basic-addon2">
                                
                            
                        </div>
                        <div class="form-row justify-content-between">
                            <div class="form-group col-lg-9">
                                @Html.LabelFor(model => model.commune, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-12" disabled>
                                    @Html.EditorFor(model => model.commune, new { htmlAttributes = new { @class = "form-control col-12", disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.commune, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-lg-3">
                                @Html.LabelFor(model => model.codePostal, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.codePostal, new { htmlAttributes = new { @class = "form-control col-12", disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.codePostal, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.rue, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.rue, new { htmlAttributes = new { @class = "form-control col-12", disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.rue, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="form-group col-lg-4">
                                    @Html.LabelFor(model => model.numero, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.numero, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                        @Html.ValidationMessageFor(model => model.numero, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group col-lg-4">
                                    @Html.LabelFor(model => model.boite, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.boite, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.boite, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div id="googleMap" class="col-lg-12" style="height:100%; border-style:double"></div>
                        </div>
                    </div>
            </div>

            <div class="jumbotron">
                <h4>photos</h4>
                <div class="row">
                    <div class="col-lg-12">
                        <div class="col-lg-7">
                            <div class="row justify-content-between">
                                <div style="border-style: double;height:250px; width:250px">
                                    <img class="img-fluid" href="#" src="adds.png" alt="plus" />
                                </div>
                                <div style="border-style: double;height:250px; width:250px">
                                    <img id="btnImg" class="img-fluid" href="#" src="add.png" alt="plus" />
                                    <input type="file" id="my_file" style="display: none;" />
                                </div>
                            </div>
                        </div>
                        <div class="row mt-5 justify-content-between">
                            <div style="border-style: double;height:100px; width:100px">
                                <img id="btnImg" class="img-fluid" href="#" src="adds.png" alt="plus" />
                            </div>
                            <div style="border-style: double;height:100px; width:100px">
                                <img id="btnImg" class="img-fluid" href="#" src="adds.png" alt="plus" />
                            </div>
                            <div style="border-style: double;height:100px; width:100px">
                                <img id="btnImg" class="img-fluid" href="#" src="adds.png" alt="plus" />
                            </div>
                            <div style="border-style: double;height:100px; width:100px">
                                <img id="btnImg" class="img-fluid" href="#" src="adds.png" alt="plus" />
                            </div>
                            <div style="border-style: double;height:100px; width:100px">
                                <img id="btnImg" class="img-fluid" href="#" src="adds.png" alt="plus" />
                            </div>
                            <div style="border-style: double;height:100px; width:100px">
                                <img id="btnImg" class="img-fluid" href="#" src="adds.png" alt="plus" />
                            </div>
                            <div style="border-style: double;height:100px; width:100px">
                                <img id="btnImg" class="img-fluid" href="#" src="adds.png" alt="plus" />
                            </div>
                            <div style="border-style: double;height:100px; width:100px">
                                <img id="btnImg" class="img-fluid" href="#" src="adds.png" alt="plus" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="jumbotron">
                <h4>Le bien</h4>
                <div class="row">
                    <div class="col-lg-6">
                       
                        <div class="form-group">
                            @Html.LabelFor(model => model.typeBien, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("typeBien", (SelectList)ViewBag.ListeTypesBiens, new { @class = "form-control " } )
                                @Html.ValidationMessageFor(model => model.typeBien, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <input id="azerty" value="aaaa" />

                        <div class="form-group">
                            @Html.LabelFor(model => model.nbEtages, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.nbEtages, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.nbEtages, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.superficie, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.superficie, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.superficie, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-5">
                                <div class="form-check">
                                    @Html.EditorFor(model => model.piscine)
                                    @Html.ValidationMessageFor(model => model.piscine, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.piscine, htmlAttributes: new { @class = "control-label col-md-2" })
                                </div>
                                <div class="form-check">
                                    @Html.EditorFor(model => model.cuisineEquipee)
                                    @Html.ValidationMessageFor(model => model.cuisineEquipee, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.cuisineEquipee, htmlAttributes: new { @class = "control-label col-md-2" })
                                </div>
                                <div class="form-check">
                                    @Html.EditorFor(model => model.parking)
                                    @Html.ValidationMessageFor(model => model.parking, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.parking, htmlAttributes: new { @class = "control-label col-md-2" })
                                </div>

                            </div>

                            <div class="col-lg-5">
                                <div class="form-check">
                                    @Html.EditorFor(model => model.jardin)
                                    @Html.ValidationMessageFor(model => model.jardin, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.jardin, htmlAttributes: new { @class = "control-label col-md-2" })
                                </div>
                                <div class="form-check">
                                    @Html.EditorFor(model => model.alarme)
                                    @Html.ValidationMessageFor(model => model.alarme, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.alarme, htmlAttributes: new { @class = "control-label col-md-2" })
                                </div>
                                <div class="form-check">
                                    @Html.EditorFor(model => model.doubleVitrage)
                                    @Html.ValidationMessageFor(model => model.doubleVitrage, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.doubleVitrage, htmlAttributes: new { @class = "control-label col-md-2" })
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="col-lg-6">


                </div>
            </div>
            <div class="jumbotron">
                <h4>Les options</h4>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label for="exampleInputEmail1">commune</label>
                            <input type="text" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="commune">
                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">rue</label>
                            <input type="text" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="rue">
                        </div>
                        <div class="form-row">
                            <div class="form-group col-lg-4">
                                <label for="exampleInputEmail1">numero</label>
                                <input type="text" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="num">
                            </div>
                            <div class="form-group col-lg-4">
                                <label for="exampleInputEmail1">boite</label>
                                <input type="text" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="bte">
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6">

                    </div>
                </div>
            </div>
        </form>
    </div>

</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>BienModels</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="jumbotron">
            <div class="row">
                <h3>options</h3>
            </div>
            <div class="row">


            </div>
        </div>
        <div class="jumbotron">
            <div class="row">
                <h4>Pieces</h4>
            </div>
            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.nbChambres, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.nbChambres, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nbChambres, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.nbSdb, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.nbSdb, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nbSdb, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.nbDressing, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.nbDressing, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nbDressing, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.nbSam, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.nbSam, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nbSam, "", new { @class = "text-danger" })
                        </div>
                    </div>


                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.nbSalon, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.nbSalon, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nbSalon, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.nbBuanderie, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.nbBuanderie, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nbBuanderie, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.nbCave, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.nbCave, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nbCave, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.nbGrenier, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.nbGrenier, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nbGrenier, "", new { @class = "text-danger" })
                        </div>
                    </div>


                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.nbToilette, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.nbToilette, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nbToilette, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.nbVeranda, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.nbVeranda, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nbVeranda, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.nbGarage, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.nbGarage, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nbGarage, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.idBien, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.idBien, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idBien, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.prix, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.prix, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.prix, "", new { @class = "text-danger" })
            </div>
        </div>







        <div class="form-group">
            @Html.LabelFor(model => model.libelle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.libelle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.libelle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.anneeConstruction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.anneeConstruction, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.anneeConstruction, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.energie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.energie, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.energie, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.estSupprime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.estSupprime)
                    @Html.ValidationMessageFor(model => model.estSupprime, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.estVendu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.estVendu)
                    @Html.ValidationMessageFor(model => model.estVendu, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nbPhotos, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nbPhotos, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nbPhotos, "", new { @class = "text-danger" })
            </div>
        </div>









        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">

    function initialize() {
        var options = {
            componentRestrictions: {
                country: "BE"
            }
        };

        var input = document.getElementById('searchTextField');
        var autocomplete = new google.maps.places.Autocomplete(input, options);
        var places = autocomplete.getPlace();

        google.maps.event.addListener(autocomplete, 'place_changed', function () {
            var place = autocomplete.getPlace();
            
                $('#commune').val(place.address_components[2].long_name);
                $('#rue').val(place.address_components[1].long_name);
                $('#numero').val(place.address_components[0].long_name);
                $('#codePostal').val(place.address_components[5].long_name);
            
            

            var lat;
            var lon;
            var geocoder = new google.maps.Geocoder();
            var adresse = $('#searchTextField').val();
            geocoder.geocode({ 'address': adresse }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    // do something with the geocoded result
                    //
                    lat = results[0].geometry.location.lat();
                    lon = results[0].geometry.location.lng();
                    
                    initMap(lat, lon)

                }
            });
        });


    }
    google.maps.event.addDomListener(window, 'load', initialize);

    $('#searchTextField').change(function () {
        $('#commune').val("");
        $('#rue').val("");
        $('#numero').val("");
        $('#codePostal').val("");
    });
</script>

<script>
    $('#typeBien').change(function () {
        
        $('#azerty').val($(this).val());
    })
    $('#btnImg').click(function () {
        $("input[id='my_file']").click();
    });
    
    function initMap(lat, lng) {
        if (lat == null && lng == null) {

            var myLatLng = { lat: 50.7146900, lng: 4.3991000 };
        }
        else {
            var myLatLng = { lat: lat, lng: lng };
        }

        var mapProp = {
            center: new google.maps.LatLng(myLatLng),
            zoom: 15,
            scrollwheel: false,
            navigationControl: false,
            mapTypeControl: false,
            scaleControl: false,
            draggable: false
        };

        var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
        var marker = new google.maps.Marker({
            position: myLatLng,
            map: map
        });
    }
    function myMap() {
        if ($('#searchTextField').val() != "") {
            var adresse = $('#searchTextField').val();

            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({ 'address': adresse }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    // do something with the geocoded result
                    //
                    lat = results[0].geometry.location.lat();
                    lon = results[0].geometry.location.lng();
                    initMap(lat, lon)

                }
            })
        }
        else {
            var myLatLng = { lat: 50.7146900, lng: 4.3991000 };

            var mapProp = {
                center: new google.maps.LatLng(myLatLng),
                zoom: 5,
                scrollwheel: false,
                navigationControl: false,
                mapTypeControl: false,
                scaleControl: false,
                draggable: false
            };
        }
            
        var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
        
    }
    
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCHaJXOb3KVvODTc1FDLpY44cpoUctO0u0&callback=myMap"></script>
