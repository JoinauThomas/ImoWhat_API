@model ImmoWhatApp.Models.BienModels

@{
    ViewBag.Title = "AddNewBien";
}

<h2>AddNewBien</h2>







<form id="formAjoutBien" enctype="multipart/form-data" method="post">

    <div class="row" style="margin-top:10vh;">
        <div class="col-lg-10 offset-lg-1 mt-4">

            @Html.AntiForgeryToken()

            @*ADRESSE*@

            <div class="jumbotron">
                <h4>adresse</h4>
                <div class="row">
                    <div class="col-lg-6">

                        <div class="form-group col-12">
                            <input id="searchTextField" type="text" class="form-control col-12" placeholder="adresse" aria-label="Recipient's username" aria-describedby="basic-addon2">


                        </div>
                        <div class="form-row justify-content-between">
                            <div class="form-group col-lg-9">
                                @Html.LabelFor(model => model.commune, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-12" disabled>
                                    @Html.EditorFor(model => model.commune, new { htmlAttributes = new { @class = "form-control col-12", disabled = "disabled" } })
                                    <span style="display:none" class="text-danger" id="errorCommune"></span>
                                </div>
                            </div>
                            <div class="form-group col-lg-3">
                                @Html.LabelFor(model => model.codePostal, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.codePostal, new { htmlAttributes = new { @class = "form-control col-12", disabled = "disabled" } })
                                    <span style="display:none" class="text-danger" id="errorCodePostal"></span>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.rue, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.rue, new { htmlAttributes = new { @class = "form-control col-12", disabled = "disabled" } })
                                <span style="display:none" class="text-danger" id="errorRue"></span>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(model => model.numero, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.numero, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    <span style="display:none" class="text-danger" id="errorNumero"></span>
                                </div>
                            </div>
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(model => model.boite, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.boite, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.boite, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div id="googleMap" class="col-lg-12" style="height:100%; border-style:double"></div>
                    </div>
                </div>
            </div>

            @*PHOTOS*@

            <div class="jumbotron">
                <h4>photos</h4>
                <div class="row">
                    <div class="col-lg-12">
                        <div class="col-lg-7">
                            <div class="row justify-content-between">
                                <div style="border-style: double;height:250px; width:250px; position:relative">
                                    <img id="img0" class=" rounded " href="#" src="~/img/bien/homeAdd.png" alt="plus" style="max-height:100%; max-width:100%; position:absolute; margin:0; top:50%; margin-left:50%; transform: translate(-50%, -50%); display: none;" />
                                </div>
                                <div style="height:250px; width:250px; position:relative">
                                    <button type="button" id="btnImg" href="#" style="height:75%; width:75%; position:absolute; margin:0; top:50%; margin-left:50%; transform: translate(-50%, -50%)" class="btn btn-primary btn-lg rounded-circle btnImg"><img src="~/assets/png/plus-8x.png" style="width:80%; width:80%" /></button>
                                    <input type="file" id="my_file" style="display: none;" />
                                </div>
                            </div>
                        </div>
                        <div class="row mt-5 justify-content-between">
                            <div style="height:100px; width:100px; position:relative">
                                <img id="img1" class=" rounded " href="#" src="" alt="plus" style="max-height:100%; max-width:100%; position:absolute; margin:0; top:50%; margin-left:50%; transform: translate(-50%, -50%); display: none;" />
                            </div>
                            <div style="height:100px; width:100px; position:relative">
                                <img id="img2" class=" rounded " href="#" src="" alt="plus" style="max-height:100%; max-width:100%; position:absolute; margin:0; top:50%; margin-left:50%; transform: translate(-50%, -50%); display: none;" />
                            </div>
                            <div style="height:100px; width:100px; position:relative">
                                <img id="img3" class=" rounded " href="#" src="" alt="plus" style="max-height:100%; max-width:100%; position:absolute; margin:0; top:50%; margin-left:50%; transform: translate(-50%, -50%); display: none;" />
                            </div>
                            <div style="height:100px; width:100px; position:relative">
                                <img id="img4" class=" rounded " href="#" src="" alt="plus" style="max-height:100%; max-width:100%; position:absolute; margin:0; top:50%; margin-left:50%; transform: translate(-50%, -50%); display: none;" />
                            </div>
                            <div style="height:100px; width:100px; position:relative">
                                <img id="img5" class=" rounded " href="#" src="" alt="plus" style="max-height:100%; max-width:100%; position:absolute; margin:0; top:50%; margin-left:50%; transform: translate(-50%, -50%); display: none;" />
                            </div>
                            <div style="height:100px; width:100px; position:relative">
                                <img id="img6" class=" rounded " href="#" src="" alt="plus" style="max-height:100%; max-width:100%; position:absolute; margin:0; top:50%; margin-left:50%; transform: translate(-50%, -50%); display: none;" />
                            </div>
                            <div style="height:100px; width:100px; position:relative">
                                <img id="img7" class=" rounded " href="#" src="" alt="plus" style="max-height:100%; max-width:100%; position:absolute; margin:0; top:50%; margin-left:50%; transform: translate(-50%, -50%); display: none;" />
                            </div>
                            <div style="height:100px; width:100px; position:relative">
                                <img id="img8" class=" rounded " href="#" src="" alt="plus" style="max-height:100%; max-width:100%; position:absolute; margin:0; top:50%; margin-left:50%; transform: translate(-50%, -50%); display: none;" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @*LE BIEN*@

            <div class="jumbotron">
                <h4>Le bien</h4>
                <div class="row">
                    <div class="col-3">

                        <div class="form-group">
                            @Html.LabelFor(model => model.typeBien, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.DropDownList("typeBien", (SelectList)ViewBag.ListeTypesBiens, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.typeBien, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.nbEtages, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                @Html.DropDownList("nbEtages", (SelectList)ViewBag.nbPieces, new { @class = "form-control " })
                                @Html.ValidationMessageFor(model => model.nbEtages, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.superficie, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.superficie, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.superficie, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.anneeConstruction, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.anneeConstruction, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.anneeConstruction, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.energie, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("energie", (SelectList)ViewBag.nrj, new { @class = "form-control " })
                                @Html.ValidationMessageFor(model => model.energie, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    <div class="col-8 offset-1">
                        <div class="form-group">
                            @Html.LabelFor(model => model.prix, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.prix, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.prix, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.libelle, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.libelle, new { @class = "form-control col-12", rows = 13 })
                                @Html.ValidationMessageFor(model => model.libelle, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                </div>

            </div>

            @*LES PIECES + LES OPTIONS*@

            <div class="jumbotron">
                <div class="row">
                    <div class="col-7 border border-primary pl-5 pt-3 rounded">
                        <div class="row">
                            <h4>Pieces</h4>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.nbChambres, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("nbChambres", (SelectList)ViewBag.nbPieces, new { @class = "form-control " })
                                        @Html.ValidationMessageFor(model => model.nbChambres, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.nbSdb, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("nbSdb", (SelectList)ViewBag.nbPieces, new { @class = "form-control " })
                                        @Html.ValidationMessageFor(model => model.nbSdb, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.nbDressing, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("nbDressing", (SelectList)ViewBag.nbPieces, new { @class = "form-control " })
                                        @Html.ValidationMessageFor(model => model.nbDressing, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.nbSam, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("nbSam", (SelectList)ViewBag.nbPieces, new { @class = "form-control " })
                                        @Html.ValidationMessageFor(model => model.nbSam, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                            </div>
                            <div class="col-lg-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.nbSalon, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("nbSalon", (SelectList)ViewBag.nbPieces, new { @class = "form-control " })
                                        @Html.ValidationMessageFor(model => model.nbSalon, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.nbBuanderie, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("nbBuanderie", (SelectList)ViewBag.nbPieces, new { @class = "form-control " })
                                        @Html.ValidationMessageFor(model => model.nbBuanderie, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.nbCave, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("nbCave", (SelectList)ViewBag.nbPieces, new { @class = "form-control " })
                                        @Html.ValidationMessageFor(model => model.nbCave, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.nbGrenier, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("nbGrenier", (SelectList)ViewBag.nbPieces, new { @class = "form-control " })
                                        @Html.ValidationMessageFor(model => model.nbGrenier, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                            </div>
                            <div class="col-lg-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.nbToilette, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("nbToilette", (SelectList)ViewBag.nbPieces, new { @class = "form-control " })
                                        @Html.ValidationMessageFor(model => model.nbToilette, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.nbVeranda, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("nbVeranda", (SelectList)ViewBag.nbPieces, new { @class = "form-control " })
                                        @Html.ValidationMessageFor(model => model.nbVeranda, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.nbGarage, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("nbGarage", (SelectList)ViewBag.nbPieces, new { @class = "form-control " })
                                        @Html.ValidationMessageFor(model => model.nbGarage, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-4 offset-1 border border-primary  pt-3 rounded">
                        <div class="row">
                            <h4 class="pl-4">Options</h4>
                        </div>
                        <div class="row">
                            <div class="col-lg-5">
                                <div class="form-check mt-4">
                                    @Html.EditorFor(model => model.piscine)
                                    @Html.ValidationMessageFor(model => model.piscine, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.piscine, htmlAttributes: new { @class = "control-label col-md-2" })
                                </div>
                                <div class="form-check mt-5">
                                    @Html.EditorFor(model => model.cuisineEquipee)
                                    @Html.ValidationMessageFor(model => model.cuisineEquipee, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.cuisineEquipee, htmlAttributes: new { @class = "control-label col-md-2" })
                                </div>
                                <div class="form-check mt-5">
                                    @Html.EditorFor(model => model.parking)
                                    @Html.ValidationMessageFor(model => model.parking, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.parking, htmlAttributes: new { @class = "control-label col-md-2" })
                                </div>

                            </div>

                            <div class="col-lg-5">
                                <div class="form-check mt-4">
                                    @Html.EditorFor(model => model.jardin)
                                    @Html.ValidationMessageFor(model => model.jardin, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.jardin, htmlAttributes: new { @class = "control-label col-md-2" })
                                </div>
                                <div class="form-check mt-5">
                                    @Html.EditorFor(model => model.alarme)
                                    @Html.ValidationMessageFor(model => model.alarme, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.alarme, htmlAttributes: new { @class = "control-label col-md-2" })
                                </div>
                                <div class="form-check mt-5">
                                    @Html.EditorFor(model => model.doubleVitrage)
                                    @Html.ValidationMessageFor(model => model.doubleVitrage, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.doubleVitrage, htmlAttributes: new { @class = "control-label col-md-2" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>


    @{






        <div class="form-group">
            @Html.LabelFor(model => model.nbPhotos, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nbPhotos, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nbPhotos, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="btnPostForm" type="button" class="btn btn-default" />
            </div>
        </div>


        <img id="chargement" src="~/img/loaders/infini.gif" style="display: none" alt="Chargement en cours..." class="loaderConnection col-md-offset-5 col-md-2 col-md-offset-5" />
        <div id="myModal" style="display:none">
            <p id="modal_content" class="modalTxt "></p>
        </div>


    }
</form>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    function validateForm() {
        var commune = $('#commune').val();
        var rue = $('#rue').val();
        var numero = $('#numero').val();
        var nbEtages = $('#nbEtages').val();
        var superficie = $('#superficie').val();
        var nbChambres = $('#nbChambres').val();
        var nbSdb = $('#nbSdb').val();
        var nbDressing = $('#nbDressing').val();
        var nbSam = $('#nbSam').val();
        var nbSalon = $('#nbSalon').val();
        var nbBuanderie = $('#nbBuanderie').val();
        var nbCave = $('#nbCave').val();
        var nbGrenier = $('#nbGrenier').val();
        var nbToilette = $('#nbToilette').val();
        var nbVeranda = $('#nbVeranda').val();
        var nbGarage = $('#nbGarage').val();
        var prix = $('#prix').val();
        var libelle = $('#libelle').val();
        var anneeConstruction = $('#anneeConstruction').val();

        var ok = true;

        if (commune == "") {
            $('#erroCommune').html("veuillez mettre une adresse mail svp");
            $('#errorMail').show();
            ok = false;
        }
        else {
            $('#errorMail').hide();
        }



        if (nom == "") {
            $('#errorNom').html("veuillez mettre un nom svp");
            $('#errorNom').show();
            ok = false;
        }
        else {
            $('#errorNom').hide();
        }
        if (prenom == "") {
            $('#errorPrenom').html("veuillez mettre un prénom svp");
            $('#errorPrenom').show();
            ok = false;
        }
        else {
            $('#errorPrenom').hide();
        }
        if (commune == "") {
            $('#errorCommune').html("veuillez mettre une commune svp");
            $('#errorCommune').show();
            ok = false;
        }
        else {
            $('#errorCommune').hide();
        }
        if (rue == "") {
            $('#errorRue').html("veuillez mettre votre rue svp");
            $('#errorRue').show();
            ok = false;
        }
        else {
            $('#errorRue').hide();
        }
        if (num == "") {
            $('#errorNumero').html("veuillez mettre un numero svp");
            $('#errorNumero').show();
            ok = false;
        }
        else {
            $('#errorNumero').hide();
        }

        return ok;

    }
</script>


<script type="text/javascript">
    $('#btnPostForm').click(function () {

        $("#chargement").show();

        var nbImg = liste2.length;

        //alert("image " + 1 + "/" + nbImg + ", nom du fichier : " + liste2[0][0].name + "\nimage " + 1 + "/" + nbImg + ", nom du fichier : " + liste2[1][0].name);

        var formData = new FormData($('#formAjoutBien')[0]);
        formData.append("commune", $('#commune').val());
        formData.append("rue", $('#rue').val());
        formData.append("numero", $('#numero').val());
        formData.append("codePostal", $('#codePostal').val());

        $.ajax({
            type: 'POST',
            url: '@Url.Action("addNewBien", "Bien")',
            data: formData,
            processData: false,
            contentType: false,
            success: function (donnee) {
                if (donnee.success) {
                    alert(donnee.responseText);
                    //alert('okidoki');
                    //var mesfichiers = [];
                    if (nbImg > 0) {
                        var tabFin = [];
                        for (var i = 0; i < nbImg; i++) {
                            //mesfichiers.push(liste2[i]);
                            var mesfichiers = ["value1", "value2", "value3", "value4", "value5"];
                            mesfichiers = JSON.stringify({ 'mesfichiers': mesfichiers });
                            //tabFin[i] = mesfichiers;



                        }
                        alert(mesfichiers.length);
                        var fileData = new FormData();
                        fileData.append("mesfichiers", mesfichiers);

                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("AddPhotoBien", "Bien")',
                            async: false,
                            dataType: "json",
                            data: fileData,
                            processData: false,
                            contentType: false,
                            success: function (donnee) {
                                CreateModal('parfait!', donnee.responseText, true);

                            },
                            error: function (donnee) {
                                CreateModal('erreur', "img pas envoyée\nproblème : " + donnee, false);
                            }
                        })




                    }
                    else {
                        CreateModal('parfait!', donnee.responseText, true);
                    }
                }
                else {
                    CreateModal('erreur', donnee.responseText, false);
                }





            },
            error: function (error) {
                alert("error");
            }
        });
    });

    function CreateModal(title, text, returnToMainPage) {

        if (returnToMainPage == false) {
            $("#chargement").hide();
            $('#modal_content').html(text);
            $('#myModal').dialog({
                open: function (event, ui, e) { $(".ui-dialog-titlebar-close").hide(); },
                resizable: false,
                height: "auto",
                width: "400",
                modal: true,
                title: title,
                buttons: {
                    "ok": function () {
                        $(this).dialog("close");
                    }

                }
            });
        }
        else {
            $("#chargement").hide();
            $('#modal_content').html(text);
            $('#myModal').dialog({
                open: function (event, ui, e) { $(".ui-dialog-titlebar-close").hide(); },
                resizable: false,
                height: "auto",
                width: "400",
                modal: true,
                title: title,
                buttons: {
                    "ok": function () {
                        $(this).dialog("close");
                        location.href = "../Home/Index";
                    }

                }
            });
        }
       
    }
</script>
<script type="text/javascript">

    var liste = [];
    var liste2 = [];
    var liste3 = [];
    function readURL(input) {

        if (input.files && input.files[0]) {
            for (var i = 0; liste.length < 5; i++) {
                if ($('#img' + i, ).attr('src') == "" || $('#img' + i, ).attr('src') == "/img/bien/homeAdd.png") {

                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('#img' + i).attr('src', e.target.result);
                        liste3.push(e.target.result);
                        //alert(liste3[i]);
                        var fileUpload = $("#my_file").get(0);
                        var files = fileUpload.files;
                        //liste.push(files);
                        liste[i] = files;
                        //alert("aaa"+liste[i][0].name);

                    }
                    reader.readAsDataURL(input.files[0]);

                    $('#img' + i, ).fadeIn(1800, 'linear');
                    if (i == liste.length - 1) {
                        $('.btnImg').attr('disabled', true);
                    }
                    break
                }


            }





        }
    }

    $("#my_file").change(function () {
        var fileUpload = $("#my_file").get(0);
        var files = fileUpload.files;
        //liste2.push(files);

        var file = document.querySelector('#my_file').files[0];
        getBase64(file); // prints the base64 string


        readURL(this);
    });

    function getBase64(file) {
        var reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = function () {
            var adrCompl = reader.result;
            var block = adrCompl.split(";");
            var URL24 = block[1].split(",")[1];
            liste2.push(URL24);
        };
        reader.onerror = function (error) {
            console.log('Error: ', error);
        };
    }

    var file = document.querySelector('#my_file').files[0];
    getBase64(file); // prints the base64 string




</script>

<script>
    $('#typeBien').change(function () {
        //alert($(this).val())
    })
    $('#btnImg').click(function () {
        $("input[id='my_file']").click();
    });

    function initMap(lat, lng) {
        if (lat == null && lng == null) {

            var myLatLng = { lat: 50.7146900, lng: 4.3991000 };
        }
        else {
            var myLatLng = { lat: lat, lng: lng };
        }

        var mapProp = {
            center: new google.maps.LatLng(myLatLng),
            zoom: 15,
            scrollwheel: false,
            navigationControl: false,
            mapTypeControl: false,
            scaleControl: false,
            draggable: false
        };

        var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
        var marker = new google.maps.Marker({
            position: myLatLng,
            map: map
        });
    }
    function myMap() {
        if ($('#searchTextField').val() != "") {
            var adresse = $('#searchTextField').val();

            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({ 'address': adresse }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    // do something with the geocoded result
                    //
                    lat = results[0].geometry.location.lat();
                    lon = results[0].geometry.location.lng();
                    initMap(lat, lon)

                }
            })
        }
        else {
            var myLatLng = { lat: 50.7146900, lng: 4.3991000 };

            var mapProp = {
                center: new google.maps.LatLng(myLatLng),
                zoom: 5,
                scrollwheel: false,
                navigationControl: false,
                mapTypeControl: false,
                scaleControl: false,
                draggable: false
            };
        }

        var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);

    }
    function initialize() {
        var options = {
            componentRestrictions: {
                country: "BE"
            }
        };

        var input = document.getElementById('searchTextField');
        var autocomplete = new google.maps.places.Autocomplete(input, options);
        var places = autocomplete.getPlace();

        google.maps.event.addListener(autocomplete, 'place_changed', function () {
            var place = autocomplete.getPlace();
            for (var i = 0; i < 10; i++) {
                var type = place.address_components[i].types
                if (type == "street_number") {
                    $('#numero').val(place.address_components[i].long_name);
                }
                else if (type == "locality,political") {
                    $('#commune').val(place.address_components[i].long_name);
                }
                else if (type == "postal_code") {
                    $('#codePostal').val(place.address_components[i].long_name);
                }
                else if (type == "route") {
                    $('#rue').val(place.address_components[i].long_name);
                }
            }
            var lat;
            var lon;
            var geocoder = new google.maps.Geocoder();
            var adresse = $('#searchTextField').val();
            geocoder.geocode({ 'address': adresse }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    // do something with the geocoded result
                    //
                    lat = results[0].geometry.location.lat();
                    lon = results[0].geometry.location.lng();

                    initMap(lat, lon)

                }
            });
        });


    }
    google.maps.event.addDomListener(window, 'load', initialize);

    $('#searchTextField').change(function () {
        $('#commune').val("");
        $('#rue').val("");
        $('#numero').val("");
        $('#codePostal').val("");
    });

</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCHaJXOb3KVvODTc1FDLpY44cpoUctO0u0=myMap"></script>
